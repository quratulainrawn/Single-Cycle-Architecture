$date
	Wed Nov 27 01:59:24 2024
$end
$version
	QuestaSim Version 10.6c
$end
$timescale
	1ns
$end

$scope module tb_processor $end
$var reg 1 ! clk $end
$var reg 1 " rst $end

$scope module dut $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var reg 32 % pc_out [31:0] $end
$var reg 32 & inst [31:0] $end
$var reg 7 ' opcode [6:0] $end
$var reg 32 ( csr_rdata [31:0] $end
$var reg 32 ) read_data_from_data_memory [31:0] $end
$var reg 32 * write_data [31:0] $end
$var reg 3 + func3 [2:0] $end
$var reg 7 , func7 [6:0] $end
$var reg 5 - rs1 [4:0] $end
$var reg 5 . rs2 [4:0] $end
$var reg 5 / rd [4:0] $end
$var reg 32 0 alu_result [31:0] $end
$var reg 32 1 rdata1 [31:0] $end
$var reg 32 2 rdata2 [31:0] $end
$var reg 32 3 opr_b [31:0] $end
$var reg 32 4 opr_a [31:0] $end
$var reg 32 5 wdata [31:0] $end
$var reg 4 6 aluop [3:0] $end
$var reg 32 7 sign_extended_imm [31:0] $end
$var reg 1 8 rf_en $end
$var reg 1 9 imm_en $end
$var reg 1 : mem_read $end
$var reg 1 ; mem_write $end
$var reg 1 < csr_rd $end
$var reg 1 = csr_wr $end
$var reg 1 > jump_en $end
$var reg 1 ? sel_A $end
$var reg 2 @ wb_sel [1:0] $end
$var reg 1 A br_true $end
$var reg 32 B next_pc [31:0] $end
$var reg 1 C trap $end
$var reg 1 D is_mret $end
$var reg 1 E epc_taken $end
$var reg 32 F epc [31:0] $end

$scope module pc_inst $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 1 G pc_in [31] $end
$var wire 1 H pc_in [30] $end
$var wire 1 I pc_in [29] $end
$var wire 1 J pc_in [28] $end
$var wire 1 K pc_in [27] $end
$var wire 1 L pc_in [26] $end
$var wire 1 M pc_in [25] $end
$var wire 1 N pc_in [24] $end
$var wire 1 O pc_in [23] $end
$var wire 1 P pc_in [22] $end
$var wire 1 Q pc_in [21] $end
$var wire 1 R pc_in [20] $end
$var wire 1 S pc_in [19] $end
$var wire 1 T pc_in [18] $end
$var wire 1 U pc_in [17] $end
$var wire 1 V pc_in [16] $end
$var wire 1 W pc_in [15] $end
$var wire 1 X pc_in [14] $end
$var wire 1 Y pc_in [13] $end
$var wire 1 Z pc_in [12] $end
$var wire 1 [ pc_in [11] $end
$var wire 1 \ pc_in [10] $end
$var wire 1 ] pc_in [9] $end
$var wire 1 ^ pc_in [8] $end
$var wire 1 _ pc_in [7] $end
$var wire 1 ` pc_in [6] $end
$var wire 1 a pc_in [5] $end
$var wire 1 b pc_in [4] $end
$var wire 1 c pc_in [3] $end
$var wire 1 d pc_in [2] $end
$var wire 1 e pc_in [1] $end
$var wire 1 f pc_in [0] $end
$var reg 32 g pc_out [31:0] $end
$upscope $end

$scope module imem $end
$var wire 1 h addr [31] $end
$var wire 1 i addr [30] $end
$var wire 1 j addr [29] $end
$var wire 1 k addr [28] $end
$var wire 1 l addr [27] $end
$var wire 1 m addr [26] $end
$var wire 1 n addr [25] $end
$var wire 1 o addr [24] $end
$var wire 1 p addr [23] $end
$var wire 1 q addr [22] $end
$var wire 1 r addr [21] $end
$var wire 1 s addr [20] $end
$var wire 1 t addr [19] $end
$var wire 1 u addr [18] $end
$var wire 1 v addr [17] $end
$var wire 1 w addr [16] $end
$var wire 1 x addr [15] $end
$var wire 1 y addr [14] $end
$var wire 1 z addr [13] $end
$var wire 1 { addr [12] $end
$var wire 1 | addr [11] $end
$var wire 1 } addr [10] $end
$var wire 1 ~ addr [9] $end
$var wire 1 !! addr [8] $end
$var wire 1 "! addr [7] $end
$var wire 1 #! addr [6] $end
$var wire 1 $! addr [5] $end
$var wire 1 %! addr [4] $end
$var wire 1 &! addr [3] $end
$var wire 1 '! addr [2] $end
$var wire 1 (! addr [1] $end
$var wire 1 )! addr [0] $end
$var reg 32 *! data [31:0] $end
$upscope $end

$scope module inst_instance $end
$var wire 1 +! inst [31] $end
$var wire 1 ,! inst [30] $end
$var wire 1 -! inst [29] $end
$var wire 1 .! inst [28] $end
$var wire 1 /! inst [27] $end
$var wire 1 0! inst [26] $end
$var wire 1 1! inst [25] $end
$var wire 1 2! inst [24] $end
$var wire 1 3! inst [23] $end
$var wire 1 4! inst [22] $end
$var wire 1 5! inst [21] $end
$var wire 1 6! inst [20] $end
$var wire 1 7! inst [19] $end
$var wire 1 8! inst [18] $end
$var wire 1 9! inst [17] $end
$var wire 1 :! inst [16] $end
$var wire 1 ;! inst [15] $end
$var wire 1 <! inst [14] $end
$var wire 1 =! inst [13] $end
$var wire 1 >! inst [12] $end
$var wire 1 ?! inst [11] $end
$var wire 1 @! inst [10] $end
$var wire 1 A! inst [9] $end
$var wire 1 B! inst [8] $end
$var wire 1 C! inst [7] $end
$var wire 1 D! inst [6] $end
$var wire 1 E! inst [5] $end
$var wire 1 F! inst [4] $end
$var wire 1 G! inst [3] $end
$var wire 1 H! inst [2] $end
$var wire 1 I! inst [1] $end
$var wire 1 J! inst [0] $end
$var reg 7 K! opcode [6:0] $end
$var reg 3 L! func3 [2:0] $end
$var reg 7 M! func7 [6:0] $end
$var reg 5 N! rs1 [4:0] $end
$var reg 5 O! rs2 [4:0] $end
$var reg 5 P! rd [4:0] $end
$upscope $end

$scope module reg_file_inst $end
$var wire 1 # clk $end
$var wire 1 Q! rf_en $end
$var wire 1 R! rs1 [4] $end
$var wire 1 S! rs1 [3] $end
$var wire 1 T! rs1 [2] $end
$var wire 1 U! rs1 [1] $end
$var wire 1 V! rs1 [0] $end
$var wire 1 W! rs2 [4] $end
$var wire 1 X! rs2 [3] $end
$var wire 1 Y! rs2 [2] $end
$var wire 1 Z! rs2 [1] $end
$var wire 1 [! rs2 [0] $end
$var wire 1 \! rd [4] $end
$var wire 1 ]! rd [3] $end
$var wire 1 ^! rd [2] $end
$var wire 1 _! rd [1] $end
$var wire 1 `! rd [0] $end
$var wire 1 a! wdata [31] $end
$var wire 1 b! wdata [30] $end
$var wire 1 c! wdata [29] $end
$var wire 1 d! wdata [28] $end
$var wire 1 e! wdata [27] $end
$var wire 1 f! wdata [26] $end
$var wire 1 g! wdata [25] $end
$var wire 1 h! wdata [24] $end
$var wire 1 i! wdata [23] $end
$var wire 1 j! wdata [22] $end
$var wire 1 k! wdata [21] $end
$var wire 1 l! wdata [20] $end
$var wire 1 m! wdata [19] $end
$var wire 1 n! wdata [18] $end
$var wire 1 o! wdata [17] $end
$var wire 1 p! wdata [16] $end
$var wire 1 q! wdata [15] $end
$var wire 1 r! wdata [14] $end
$var wire 1 s! wdata [13] $end
$var wire 1 t! wdata [12] $end
$var wire 1 u! wdata [11] $end
$var wire 1 v! wdata [10] $end
$var wire 1 w! wdata [9] $end
$var wire 1 x! wdata [8] $end
$var wire 1 y! wdata [7] $end
$var wire 1 z! wdata [6] $end
$var wire 1 {! wdata [5] $end
$var wire 1 |! wdata [4] $end
$var wire 1 }! wdata [3] $end
$var wire 1 ~! wdata [2] $end
$var wire 1 !" wdata [1] $end
$var wire 1 "" wdata [0] $end
$var reg 32 #" rdata1 [31:0] $end
$var reg 32 $" rdata2 [31:0] $end
$upscope $end

$scope module csr_inst $end
$var parameter 12 %" CSR_MSTATUS $end
$var parameter 12 &" CSR_MIE $end
$var parameter 12 '" CSR_MTVEC $end
$var parameter 12 (" CSR_MEPC $end
$var parameter 12 )" CSR_MCAUSE $end
$var parameter 12 *" CSR_MIP $end
$var wire 1 +" inst [31] $end
$var wire 1 ," inst [30] $end
$var wire 1 -" inst [29] $end
$var wire 1 ." inst [28] $end
$var wire 1 /" inst [27] $end
$var wire 1 0" inst [26] $end
$var wire 1 1" inst [25] $end
$var wire 1 2" inst [24] $end
$var wire 1 3" inst [23] $end
$var wire 1 4" inst [22] $end
$var wire 1 5" inst [21] $end
$var wire 1 6" inst [20] $end
$var wire 1 7" inst [19] $end
$var wire 1 8" inst [18] $end
$var wire 1 9" inst [17] $end
$var wire 1 :" inst [16] $end
$var wire 1 ;" inst [15] $end
$var wire 1 <" inst [14] $end
$var wire 1 =" inst [13] $end
$var wire 1 >" inst [12] $end
$var wire 1 ?" inst [11] $end
$var wire 1 @" inst [10] $end
$var wire 1 A" inst [9] $end
$var wire 1 B" inst [8] $end
$var wire 1 C" inst [7] $end
$var wire 1 D" inst [6] $end
$var wire 1 E" inst [5] $end
$var wire 1 F" inst [4] $end
$var wire 1 G" inst [3] $end
$var wire 1 H" inst [2] $end
$var wire 1 I" inst [1] $end
$var wire 1 J" inst [0] $end
$var wire 1 K" wdata [31] $end
$var wire 1 L" wdata [30] $end
$var wire 1 M" wdata [29] $end
$var wire 1 N" wdata [28] $end
$var wire 1 O" wdata [27] $end
$var wire 1 P" wdata [26] $end
$var wire 1 Q" wdata [25] $end
$var wire 1 R" wdata [24] $end
$var wire 1 S" wdata [23] $end
$var wire 1 T" wdata [22] $end
$var wire 1 U" wdata [21] $end
$var wire 1 V" wdata [20] $end
$var wire 1 W" wdata [19] $end
$var wire 1 X" wdata [18] $end
$var wire 1 Y" wdata [17] $end
$var wire 1 Z" wdata [16] $end
$var wire 1 [" wdata [15] $end
$var wire 1 \" wdata [14] $end
$var wire 1 ]" wdata [13] $end
$var wire 1 ^" wdata [12] $end
$var wire 1 _" wdata [11] $end
$var wire 1 `" wdata [10] $end
$var wire 1 a" wdata [9] $end
$var wire 1 b" wdata [8] $end
$var wire 1 c" wdata [7] $end
$var wire 1 d" wdata [6] $end
$var wire 1 e" wdata [5] $end
$var wire 1 f" wdata [4] $end
$var wire 1 g" wdata [3] $end
$var wire 1 h" wdata [2] $end
$var wire 1 i" wdata [1] $end
$var wire 1 j" wdata [0] $end
$var wire 1 k" pc [31] $end
$var wire 1 l" pc [30] $end
$var wire 1 m" pc [29] $end
$var wire 1 n" pc [28] $end
$var wire 1 o" pc [27] $end
$var wire 1 p" pc [26] $end
$var wire 1 q" pc [25] $end
$var wire 1 r" pc [24] $end
$var wire 1 s" pc [23] $end
$var wire 1 t" pc [22] $end
$var wire 1 u" pc [21] $end
$var wire 1 v" pc [20] $end
$var wire 1 w" pc [19] $end
$var wire 1 x" pc [18] $end
$var wire 1 y" pc [17] $end
$var wire 1 z" pc [16] $end
$var wire 1 {" pc [15] $end
$var wire 1 |" pc [14] $end
$var wire 1 }" pc [13] $end
$var wire 1 ~" pc [12] $end
$var wire 1 !# pc [11] $end
$var wire 1 "# pc [10] $end
$var wire 1 ## pc [9] $end
$var wire 1 $# pc [8] $end
$var wire 1 %# pc [7] $end
$var wire 1 &# pc [6] $end
$var wire 1 '# pc [5] $end
$var wire 1 (# pc [4] $end
$var wire 1 )# pc [3] $end
$var wire 1 *# pc [2] $end
$var wire 1 +# pc [1] $end
$var wire 1 ,# pc [0] $end
$var reg 32 -# rdata [31:0] $end
$var reg 32 .# epc [31:0] $end
$var wire 1 /# csr_rd $end
$var wire 1 0# csr_wr $end
$var wire 1 $ rst $end
$var wire 1 # clk $end
$var wire 1 1# is_mret $end
$var reg 1 2# epc_taken $end
$var reg 1 3# is_device_ent_in $end
$var reg 1 4# is_global_ent_in $end
$var reg 1 5# trap $end
$upscope $end

$scope module contr_inst $end
$var wire 1 6# opcode [6] $end
$var wire 1 7# opcode [5] $end
$var wire 1 8# opcode [4] $end
$var wire 1 9# opcode [3] $end
$var wire 1 :# opcode [2] $end
$var wire 1 ;# opcode [1] $end
$var wire 1 <# opcode [0] $end
$var wire 1 =# func3 [2] $end
$var wire 1 ># func3 [1] $end
$var wire 1 ?# func3 [0] $end
$var wire 1 @# func7 [6] $end
$var wire 1 A# func7 [5] $end
$var wire 1 B# func7 [4] $end
$var wire 1 C# func7 [3] $end
$var wire 1 D# func7 [2] $end
$var wire 1 E# func7 [1] $end
$var wire 1 F# func7 [0] $end
$var reg 4 G# aluop [3:0] $end
$var reg 1 H# rf_en $end
$var reg 1 I# imm_en $end
$var reg 1 J# jump_en $end
$var reg 1 K# mem_read $end
$var reg 1 L# mem_write $end
$var reg 2 M# wb_sel [1:0] $end
$var reg 1 N# sel_A $end
$var reg 1 O# csr_rd $end
$var reg 1 P# csr_wr $end
$var reg 1 Q# is_mret $end
$upscope $end

$scope module alu_mux_inst $end
$var wire 1 R# sign_extended_imm [31] $end
$var wire 1 S# sign_extended_imm [30] $end
$var wire 1 T# sign_extended_imm [29] $end
$var wire 1 U# sign_extended_imm [28] $end
$var wire 1 V# sign_extended_imm [27] $end
$var wire 1 W# sign_extended_imm [26] $end
$var wire 1 X# sign_extended_imm [25] $end
$var wire 1 Y# sign_extended_imm [24] $end
$var wire 1 Z# sign_extended_imm [23] $end
$var wire 1 [# sign_extended_imm [22] $end
$var wire 1 \# sign_extended_imm [21] $end
$var wire 1 ]# sign_extended_imm [20] $end
$var wire 1 ^# sign_extended_imm [19] $end
$var wire 1 _# sign_extended_imm [18] $end
$var wire 1 `# sign_extended_imm [17] $end
$var wire 1 a# sign_extended_imm [16] $end
$var wire 1 b# sign_extended_imm [15] $end
$var wire 1 c# sign_extended_imm [14] $end
$var wire 1 d# sign_extended_imm [13] $end
$var wire 1 e# sign_extended_imm [12] $end
$var wire 1 f# sign_extended_imm [11] $end
$var wire 1 g# sign_extended_imm [10] $end
$var wire 1 h# sign_extended_imm [9] $end
$var wire 1 i# sign_extended_imm [8] $end
$var wire 1 j# sign_extended_imm [7] $end
$var wire 1 k# sign_extended_imm [6] $end
$var wire 1 l# sign_extended_imm [5] $end
$var wire 1 m# sign_extended_imm [4] $end
$var wire 1 n# sign_extended_imm [3] $end
$var wire 1 o# sign_extended_imm [2] $end
$var wire 1 p# sign_extended_imm [1] $end
$var wire 1 q# sign_extended_imm [0] $end
$var wire 1 r# imm_en $end
$var wire 1 s# rdata2 [31] $end
$var wire 1 t# rdata2 [30] $end
$var wire 1 u# rdata2 [29] $end
$var wire 1 v# rdata2 [28] $end
$var wire 1 w# rdata2 [27] $end
$var wire 1 x# rdata2 [26] $end
$var wire 1 y# rdata2 [25] $end
$var wire 1 z# rdata2 [24] $end
$var wire 1 {# rdata2 [23] $end
$var wire 1 |# rdata2 [22] $end
$var wire 1 }# rdata2 [21] $end
$var wire 1 ~# rdata2 [20] $end
$var wire 1 !$ rdata2 [19] $end
$var wire 1 "$ rdata2 [18] $end
$var wire 1 #$ rdata2 [17] $end
$var wire 1 $$ rdata2 [16] $end
$var wire 1 %$ rdata2 [15] $end
$var wire 1 &$ rdata2 [14] $end
$var wire 1 '$ rdata2 [13] $end
$var wire 1 ($ rdata2 [12] $end
$var wire 1 )$ rdata2 [11] $end
$var wire 1 *$ rdata2 [10] $end
$var wire 1 +$ rdata2 [9] $end
$var wire 1 ,$ rdata2 [8] $end
$var wire 1 -$ rdata2 [7] $end
$var wire 1 .$ rdata2 [6] $end
$var wire 1 /$ rdata2 [5] $end
$var wire 1 0$ rdata2 [4] $end
$var wire 1 1$ rdata2 [3] $end
$var wire 1 2$ rdata2 [2] $end
$var wire 1 3$ rdata2 [1] $end
$var wire 1 4$ rdata2 [0] $end
$var reg 32 5$ opr_b [31:0] $end
$upscope $end

$scope module opr_A_mux_inst $end
$var wire 1 6$ pc_out [31] $end
$var wire 1 7$ pc_out [30] $end
$var wire 1 8$ pc_out [29] $end
$var wire 1 9$ pc_out [28] $end
$var wire 1 :$ pc_out [27] $end
$var wire 1 ;$ pc_out [26] $end
$var wire 1 <$ pc_out [25] $end
$var wire 1 =$ pc_out [24] $end
$var wire 1 >$ pc_out [23] $end
$var wire 1 ?$ pc_out [22] $end
$var wire 1 @$ pc_out [21] $end
$var wire 1 A$ pc_out [20] $end
$var wire 1 B$ pc_out [19] $end
$var wire 1 C$ pc_out [18] $end
$var wire 1 D$ pc_out [17] $end
$var wire 1 E$ pc_out [16] $end
$var wire 1 F$ pc_out [15] $end
$var wire 1 G$ pc_out [14] $end
$var wire 1 H$ pc_out [13] $end
$var wire 1 I$ pc_out [12] $end
$var wire 1 J$ pc_out [11] $end
$var wire 1 K$ pc_out [10] $end
$var wire 1 L$ pc_out [9] $end
$var wire 1 M$ pc_out [8] $end
$var wire 1 N$ pc_out [7] $end
$var wire 1 O$ pc_out [6] $end
$var wire 1 P$ pc_out [5] $end
$var wire 1 Q$ pc_out [4] $end
$var wire 1 R$ pc_out [3] $end
$var wire 1 S$ pc_out [2] $end
$var wire 1 T$ pc_out [1] $end
$var wire 1 U$ pc_out [0] $end
$var wire 1 V$ sel_A $end
$var wire 1 W$ rdata1 [31] $end
$var wire 1 X$ rdata1 [30] $end
$var wire 1 Y$ rdata1 [29] $end
$var wire 1 Z$ rdata1 [28] $end
$var wire 1 [$ rdata1 [27] $end
$var wire 1 \$ rdata1 [26] $end
$var wire 1 ]$ rdata1 [25] $end
$var wire 1 ^$ rdata1 [24] $end
$var wire 1 _$ rdata1 [23] $end
$var wire 1 `$ rdata1 [22] $end
$var wire 1 a$ rdata1 [21] $end
$var wire 1 b$ rdata1 [20] $end
$var wire 1 c$ rdata1 [19] $end
$var wire 1 d$ rdata1 [18] $end
$var wire 1 e$ rdata1 [17] $end
$var wire 1 f$ rdata1 [16] $end
$var wire 1 g$ rdata1 [15] $end
$var wire 1 h$ rdata1 [14] $end
$var wire 1 i$ rdata1 [13] $end
$var wire 1 j$ rdata1 [12] $end
$var wire 1 k$ rdata1 [11] $end
$var wire 1 l$ rdata1 [10] $end
$var wire 1 m$ rdata1 [9] $end
$var wire 1 n$ rdata1 [8] $end
$var wire 1 o$ rdata1 [7] $end
$var wire 1 p$ rdata1 [6] $end
$var wire 1 q$ rdata1 [5] $end
$var wire 1 r$ rdata1 [4] $end
$var wire 1 s$ rdata1 [3] $end
$var wire 1 t$ rdata1 [2] $end
$var wire 1 u$ rdata1 [1] $end
$var wire 1 v$ rdata1 [0] $end
$var reg 32 w$ opr_a [31:0] $end
$upscope $end

$scope module alu_inst $end
$var wire 1 x$ opr_a [31] $end
$var wire 1 y$ opr_a [30] $end
$var wire 1 z$ opr_a [29] $end
$var wire 1 {$ opr_a [28] $end
$var wire 1 |$ opr_a [27] $end
$var wire 1 }$ opr_a [26] $end
$var wire 1 ~$ opr_a [25] $end
$var wire 1 !% opr_a [24] $end
$var wire 1 "% opr_a [23] $end
$var wire 1 #% opr_a [22] $end
$var wire 1 $% opr_a [21] $end
$var wire 1 %% opr_a [20] $end
$var wire 1 &% opr_a [19] $end
$var wire 1 '% opr_a [18] $end
$var wire 1 (% opr_a [17] $end
$var wire 1 )% opr_a [16] $end
$var wire 1 *% opr_a [15] $end
$var wire 1 +% opr_a [14] $end
$var wire 1 ,% opr_a [13] $end
$var wire 1 -% opr_a [12] $end
$var wire 1 .% opr_a [11] $end
$var wire 1 /% opr_a [10] $end
$var wire 1 0% opr_a [9] $end
$var wire 1 1% opr_a [8] $end
$var wire 1 2% opr_a [7] $end
$var wire 1 3% opr_a [6] $end
$var wire 1 4% opr_a [5] $end
$var wire 1 5% opr_a [4] $end
$var wire 1 6% opr_a [3] $end
$var wire 1 7% opr_a [2] $end
$var wire 1 8% opr_a [1] $end
$var wire 1 9% opr_a [0] $end
$var wire 1 :% opr_b [31] $end
$var wire 1 ;% opr_b [30] $end
$var wire 1 <% opr_b [29] $end
$var wire 1 =% opr_b [28] $end
$var wire 1 >% opr_b [27] $end
$var wire 1 ?% opr_b [26] $end
$var wire 1 @% opr_b [25] $end
$var wire 1 A% opr_b [24] $end
$var wire 1 B% opr_b [23] $end
$var wire 1 C% opr_b [22] $end
$var wire 1 D% opr_b [21] $end
$var wire 1 E% opr_b [20] $end
$var wire 1 F% opr_b [19] $end
$var wire 1 G% opr_b [18] $end
$var wire 1 H% opr_b [17] $end
$var wire 1 I% opr_b [16] $end
$var wire 1 J% opr_b [15] $end
$var wire 1 K% opr_b [14] $end
$var wire 1 L% opr_b [13] $end
$var wire 1 M% opr_b [12] $end
$var wire 1 N% opr_b [11] $end
$var wire 1 O% opr_b [10] $end
$var wire 1 P% opr_b [9] $end
$var wire 1 Q% opr_b [8] $end
$var wire 1 R% opr_b [7] $end
$var wire 1 S% opr_b [6] $end
$var wire 1 T% opr_b [5] $end
$var wire 1 U% opr_b [4] $end
$var wire 1 V% opr_b [3] $end
$var wire 1 W% opr_b [2] $end
$var wire 1 X% opr_b [1] $end
$var wire 1 Y% opr_b [0] $end
$var wire 1 Z% aluop [3] $end
$var wire 1 [% aluop [2] $end
$var wire 1 \% aluop [1] $end
$var wire 1 ]% aluop [0] $end
$var reg 32 ^% opr_res [31:0] $end
$upscope $end

$scope module imm_gen_inst $end
$var wire 1 _% inst [31] $end
$var wire 1 `% inst [30] $end
$var wire 1 a% inst [29] $end
$var wire 1 b% inst [28] $end
$var wire 1 c% inst [27] $end
$var wire 1 d% inst [26] $end
$var wire 1 e% inst [25] $end
$var wire 1 f% inst [24] $end
$var wire 1 g% inst [23] $end
$var wire 1 h% inst [22] $end
$var wire 1 i% inst [21] $end
$var wire 1 j% inst [20] $end
$var wire 1 k% inst [19] $end
$var wire 1 l% inst [18] $end
$var wire 1 m% inst [17] $end
$var wire 1 n% inst [16] $end
$var wire 1 o% inst [15] $end
$var wire 1 p% inst [14] $end
$var wire 1 q% inst [13] $end
$var wire 1 r% inst [12] $end
$var wire 1 s% inst [11] $end
$var wire 1 t% inst [10] $end
$var wire 1 u% inst [9] $end
$var wire 1 v% inst [8] $end
$var wire 1 w% inst [7] $end
$var wire 1 x% inst [6] $end
$var wire 1 y% inst [5] $end
$var wire 1 z% inst [4] $end
$var wire 1 {% inst [3] $end
$var wire 1 |% inst [2] $end
$var wire 1 }% inst [1] $end
$var wire 1 ~% inst [0] $end
$var reg 32 !& sign_extended_imm [31:0] $end
$var wire 1 "& opcode [6] $end
$var wire 1 #& opcode [5] $end
$var wire 1 $& opcode [4] $end
$var wire 1 %& opcode [3] $end
$var wire 1 && opcode [2] $end
$var wire 1 '& opcode [1] $end
$var wire 1 (& opcode [0] $end
$var wire 1 )& func3 [2] $end
$var wire 1 *& func3 [1] $end
$var wire 1 +& func3 [0] $end
$var reg 5 ,& shamt [4:0] $end
$var reg 12 -& imm [11:0] $end
$var reg 20 .& long_imm [19:0] $end
$upscope $end

$scope module data_mem_inst $end
$var wire 1 # clk $end
$var wire 1 /& addr [31] $end
$var wire 1 0& addr [30] $end
$var wire 1 1& addr [29] $end
$var wire 1 2& addr [28] $end
$var wire 1 3& addr [27] $end
$var wire 1 4& addr [26] $end
$var wire 1 5& addr [25] $end
$var wire 1 6& addr [24] $end
$var wire 1 7& addr [23] $end
$var wire 1 8& addr [22] $end
$var wire 1 9& addr [21] $end
$var wire 1 :& addr [20] $end
$var wire 1 ;& addr [19] $end
$var wire 1 <& addr [18] $end
$var wire 1 =& addr [17] $end
$var wire 1 >& addr [16] $end
$var wire 1 ?& addr [15] $end
$var wire 1 @& addr [14] $end
$var wire 1 A& addr [13] $end
$var wire 1 B& addr [12] $end
$var wire 1 C& addr [11] $end
$var wire 1 D& addr [10] $end
$var wire 1 E& addr [9] $end
$var wire 1 F& addr [8] $end
$var wire 1 G& addr [7] $end
$var wire 1 H& addr [6] $end
$var wire 1 I& addr [5] $end
$var wire 1 J& addr [4] $end
$var wire 1 K& addr [3] $end
$var wire 1 L& addr [2] $end
$var wire 1 M& addr [1] $end
$var wire 1 N& addr [0] $end
$var wire 1 O& write_data [31] $end
$var wire 1 P& write_data [30] $end
$var wire 1 Q& write_data [29] $end
$var wire 1 R& write_data [28] $end
$var wire 1 S& write_data [27] $end
$var wire 1 T& write_data [26] $end
$var wire 1 U& write_data [25] $end
$var wire 1 V& write_data [24] $end
$var wire 1 W& write_data [23] $end
$var wire 1 X& write_data [22] $end
$var wire 1 Y& write_data [21] $end
$var wire 1 Z& write_data [20] $end
$var wire 1 [& write_data [19] $end
$var wire 1 \& write_data [18] $end
$var wire 1 ]& write_data [17] $end
$var wire 1 ^& write_data [16] $end
$var wire 1 _& write_data [15] $end
$var wire 1 `& write_data [14] $end
$var wire 1 a& write_data [13] $end
$var wire 1 b& write_data [12] $end
$var wire 1 c& write_data [11] $end
$var wire 1 d& write_data [10] $end
$var wire 1 e& write_data [9] $end
$var wire 1 f& write_data [8] $end
$var wire 1 g& write_data [7] $end
$var wire 1 h& write_data [6] $end
$var wire 1 i& write_data [5] $end
$var wire 1 j& write_data [4] $end
$var wire 1 k& write_data [3] $end
$var wire 1 l& write_data [2] $end
$var wire 1 m& write_data [1] $end
$var wire 1 n& write_data [0] $end
$var wire 1 o& mem_read $end
$var wire 1 p& mem_write $end
$var wire 1 q& func3 [2] $end
$var wire 1 r& func3 [1] $end
$var wire 1 s& func3 [0] $end
$var reg 32 t& rdata [31:0] $end
$upscope $end

$scope module branch_cond_gen_inst $end
$var wire 1 u& rdata1 [31] $end
$var wire 1 v& rdata1 [30] $end
$var wire 1 w& rdata1 [29] $end
$var wire 1 x& rdata1 [28] $end
$var wire 1 y& rdata1 [27] $end
$var wire 1 z& rdata1 [26] $end
$var wire 1 {& rdata1 [25] $end
$var wire 1 |& rdata1 [24] $end
$var wire 1 }& rdata1 [23] $end
$var wire 1 ~& rdata1 [22] $end
$var wire 1 !' rdata1 [21] $end
$var wire 1 "' rdata1 [20] $end
$var wire 1 #' rdata1 [19] $end
$var wire 1 $' rdata1 [18] $end
$var wire 1 %' rdata1 [17] $end
$var wire 1 &' rdata1 [16] $end
$var wire 1 '' rdata1 [15] $end
$var wire 1 (' rdata1 [14] $end
$var wire 1 )' rdata1 [13] $end
$var wire 1 *' rdata1 [12] $end
$var wire 1 +' rdata1 [11] $end
$var wire 1 ,' rdata1 [10] $end
$var wire 1 -' rdata1 [9] $end
$var wire 1 .' rdata1 [8] $end
$var wire 1 /' rdata1 [7] $end
$var wire 1 0' rdata1 [6] $end
$var wire 1 1' rdata1 [5] $end
$var wire 1 2' rdata1 [4] $end
$var wire 1 3' rdata1 [3] $end
$var wire 1 4' rdata1 [2] $end
$var wire 1 5' rdata1 [1] $end
$var wire 1 6' rdata1 [0] $end
$var wire 1 7' rdata2 [31] $end
$var wire 1 8' rdata2 [30] $end
$var wire 1 9' rdata2 [29] $end
$var wire 1 :' rdata2 [28] $end
$var wire 1 ;' rdata2 [27] $end
$var wire 1 <' rdata2 [26] $end
$var wire 1 =' rdata2 [25] $end
$var wire 1 >' rdata2 [24] $end
$var wire 1 ?' rdata2 [23] $end
$var wire 1 @' rdata2 [22] $end
$var wire 1 A' rdata2 [21] $end
$var wire 1 B' rdata2 [20] $end
$var wire 1 C' rdata2 [19] $end
$var wire 1 D' rdata2 [18] $end
$var wire 1 E' rdata2 [17] $end
$var wire 1 F' rdata2 [16] $end
$var wire 1 G' rdata2 [15] $end
$var wire 1 H' rdata2 [14] $end
$var wire 1 I' rdata2 [13] $end
$var wire 1 J' rdata2 [12] $end
$var wire 1 K' rdata2 [11] $end
$var wire 1 L' rdata2 [10] $end
$var wire 1 M' rdata2 [9] $end
$var wire 1 N' rdata2 [8] $end
$var wire 1 O' rdata2 [7] $end
$var wire 1 P' rdata2 [6] $end
$var wire 1 Q' rdata2 [5] $end
$var wire 1 R' rdata2 [4] $end
$var wire 1 S' rdata2 [3] $end
$var wire 1 T' rdata2 [2] $end
$var wire 1 U' rdata2 [1] $end
$var wire 1 V' rdata2 [0] $end
$var wire 1 W' func3 [2] $end
$var wire 1 X' func3 [1] $end
$var wire 1 Y' func3 [0] $end
$var reg 1 Z' br_true $end
$upscope $end

$scope module writeback_mux_inst $end
$var wire 1 [' read_data_from_data_memory [31] $end
$var wire 1 \' read_data_from_data_memory [30] $end
$var wire 1 ]' read_data_from_data_memory [29] $end
$var wire 1 ^' read_data_from_data_memory [28] $end
$var wire 1 _' read_data_from_data_memory [27] $end
$var wire 1 `' read_data_from_data_memory [26] $end
$var wire 1 a' read_data_from_data_memory [25] $end
$var wire 1 b' read_data_from_data_memory [24] $end
$var wire 1 c' read_data_from_data_memory [23] $end
$var wire 1 d' read_data_from_data_memory [22] $end
$var wire 1 e' read_data_from_data_memory [21] $end
$var wire 1 f' read_data_from_data_memory [20] $end
$var wire 1 g' read_data_from_data_memory [19] $end
$var wire 1 h' read_data_from_data_memory [18] $end
$var wire 1 i' read_data_from_data_memory [17] $end
$var wire 1 j' read_data_from_data_memory [16] $end
$var wire 1 k' read_data_from_data_memory [15] $end
$var wire 1 l' read_data_from_data_memory [14] $end
$var wire 1 m' read_data_from_data_memory [13] $end
$var wire 1 n' read_data_from_data_memory [12] $end
$var wire 1 o' read_data_from_data_memory [11] $end
$var wire 1 p' read_data_from_data_memory [10] $end
$var wire 1 q' read_data_from_data_memory [9] $end
$var wire 1 r' read_data_from_data_memory [8] $end
$var wire 1 s' read_data_from_data_memory [7] $end
$var wire 1 t' read_data_from_data_memory [6] $end
$var wire 1 u' read_data_from_data_memory [5] $end
$var wire 1 v' read_data_from_data_memory [4] $end
$var wire 1 w' read_data_from_data_memory [3] $end
$var wire 1 x' read_data_from_data_memory [2] $end
$var wire 1 y' read_data_from_data_memory [1] $end
$var wire 1 z' read_data_from_data_memory [0] $end
$var wire 1 {' alu_result [31] $end
$var wire 1 |' alu_result [30] $end
$var wire 1 }' alu_result [29] $end
$var wire 1 ~' alu_result [28] $end
$var wire 1 !( alu_result [27] $end
$var wire 1 "( alu_result [26] $end
$var wire 1 #( alu_result [25] $end
$var wire 1 $( alu_result [24] $end
$var wire 1 %( alu_result [23] $end
$var wire 1 &( alu_result [22] $end
$var wire 1 '( alu_result [21] $end
$var wire 1 (( alu_result [20] $end
$var wire 1 )( alu_result [19] $end
$var wire 1 *( alu_result [18] $end
$var wire 1 +( alu_result [17] $end
$var wire 1 ,( alu_result [16] $end
$var wire 1 -( alu_result [15] $end
$var wire 1 .( alu_result [14] $end
$var wire 1 /( alu_result [13] $end
$var wire 1 0( alu_result [12] $end
$var wire 1 1( alu_result [11] $end
$var wire 1 2( alu_result [10] $end
$var wire 1 3( alu_result [9] $end
$var wire 1 4( alu_result [8] $end
$var wire 1 5( alu_result [7] $end
$var wire 1 6( alu_result [6] $end
$var wire 1 7( alu_result [5] $end
$var wire 1 8( alu_result [4] $end
$var wire 1 9( alu_result [3] $end
$var wire 1 :( alu_result [2] $end
$var wire 1 ;( alu_result [1] $end
$var wire 1 <( alu_result [0] $end
$var wire 1 =( csr_rdata [31] $end
$var wire 1 >( csr_rdata [30] $end
$var wire 1 ?( csr_rdata [29] $end
$var wire 1 @( csr_rdata [28] $end
$var wire 1 A( csr_rdata [27] $end
$var wire 1 B( csr_rdata [26] $end
$var wire 1 C( csr_rdata [25] $end
$var wire 1 D( csr_rdata [24] $end
$var wire 1 E( csr_rdata [23] $end
$var wire 1 F( csr_rdata [22] $end
$var wire 1 G( csr_rdata [21] $end
$var wire 1 H( csr_rdata [20] $end
$var wire 1 I( csr_rdata [19] $end
$var wire 1 J( csr_rdata [18] $end
$var wire 1 K( csr_rdata [17] $end
$var wire 1 L( csr_rdata [16] $end
$var wire 1 M( csr_rdata [15] $end
$var wire 1 N( csr_rdata [14] $end
$var wire 1 O( csr_rdata [13] $end
$var wire 1 P( csr_rdata [12] $end
$var wire 1 Q( csr_rdata [11] $end
$var wire 1 R( csr_rdata [10] $end
$var wire 1 S( csr_rdata [9] $end
$var wire 1 T( csr_rdata [8] $end
$var wire 1 U( csr_rdata [7] $end
$var wire 1 V( csr_rdata [6] $end
$var wire 1 W( csr_rdata [5] $end
$var wire 1 X( csr_rdata [4] $end
$var wire 1 Y( csr_rdata [3] $end
$var wire 1 Z( csr_rdata [2] $end
$var wire 1 [( csr_rdata [1] $end
$var wire 1 \( csr_rdata [0] $end
$var wire 1 ]( pc [31] $end
$var wire 1 ^( pc [30] $end
$var wire 1 _( pc [29] $end
$var wire 1 `( pc [28] $end
$var wire 1 a( pc [27] $end
$var wire 1 b( pc [26] $end
$var wire 1 c( pc [25] $end
$var wire 1 d( pc [24] $end
$var wire 1 e( pc [23] $end
$var wire 1 f( pc [22] $end
$var wire 1 g( pc [21] $end
$var wire 1 h( pc [20] $end
$var wire 1 i( pc [19] $end
$var wire 1 j( pc [18] $end
$var wire 1 k( pc [17] $end
$var wire 1 l( pc [16] $end
$var wire 1 m( pc [15] $end
$var wire 1 n( pc [14] $end
$var wire 1 o( pc [13] $end
$var wire 1 p( pc [12] $end
$var wire 1 q( pc [11] $end
$var wire 1 r( pc [10] $end
$var wire 1 s( pc [9] $end
$var wire 1 t( pc [8] $end
$var wire 1 u( pc [7] $end
$var wire 1 v( pc [6] $end
$var wire 1 w( pc [5] $end
$var wire 1 x( pc [4] $end
$var wire 1 y( pc [3] $end
$var wire 1 z( pc [2] $end
$var wire 1 {( pc [1] $end
$var wire 1 |( pc [0] $end
$var wire 1 }( wb_sel [1] $end
$var wire 1 ~( wb_sel [0] $end
$var reg 32 !) wdata [31:0] $end
$upscope $end

$scope module pc_mux_inst $end
$var wire 1 ") pc_out [31] $end
$var wire 1 #) pc_out [30] $end
$var wire 1 $) pc_out [29] $end
$var wire 1 %) pc_out [28] $end
$var wire 1 &) pc_out [27] $end
$var wire 1 ') pc_out [26] $end
$var wire 1 () pc_out [25] $end
$var wire 1 )) pc_out [24] $end
$var wire 1 *) pc_out [23] $end
$var wire 1 +) pc_out [22] $end
$var wire 1 ,) pc_out [21] $end
$var wire 1 -) pc_out [20] $end
$var wire 1 .) pc_out [19] $end
$var wire 1 /) pc_out [18] $end
$var wire 1 0) pc_out [17] $end
$var wire 1 1) pc_out [16] $end
$var wire 1 2) pc_out [15] $end
$var wire 1 3) pc_out [14] $end
$var wire 1 4) pc_out [13] $end
$var wire 1 5) pc_out [12] $end
$var wire 1 6) pc_out [11] $end
$var wire 1 7) pc_out [10] $end
$var wire 1 8) pc_out [9] $end
$var wire 1 9) pc_out [8] $end
$var wire 1 :) pc_out [7] $end
$var wire 1 ;) pc_out [6] $end
$var wire 1 <) pc_out [5] $end
$var wire 1 =) pc_out [4] $end
$var wire 1 >) pc_out [3] $end
$var wire 1 ?) pc_out [2] $end
$var wire 1 @) pc_out [1] $end
$var wire 1 A) pc_out [0] $end
$var wire 1 B) alu_result [31] $end
$var wire 1 C) alu_result [30] $end
$var wire 1 D) alu_result [29] $end
$var wire 1 E) alu_result [28] $end
$var wire 1 F) alu_result [27] $end
$var wire 1 G) alu_result [26] $end
$var wire 1 H) alu_result [25] $end
$var wire 1 I) alu_result [24] $end
$var wire 1 J) alu_result [23] $end
$var wire 1 K) alu_result [22] $end
$var wire 1 L) alu_result [21] $end
$var wire 1 M) alu_result [20] $end
$var wire 1 N) alu_result [19] $end
$var wire 1 O) alu_result [18] $end
$var wire 1 P) alu_result [17] $end
$var wire 1 Q) alu_result [16] $end
$var wire 1 R) alu_result [15] $end
$var wire 1 S) alu_result [14] $end
$var wire 1 T) alu_result [13] $end
$var wire 1 U) alu_result [12] $end
$var wire 1 V) alu_result [11] $end
$var wire 1 W) alu_result [10] $end
$var wire 1 X) alu_result [9] $end
$var wire 1 Y) alu_result [8] $end
$var wire 1 Z) alu_result [7] $end
$var wire 1 [) alu_result [6] $end
$var wire 1 \) alu_result [5] $end
$var wire 1 ]) alu_result [4] $end
$var wire 1 ^) alu_result [3] $end
$var wire 1 _) alu_result [2] $end
$var wire 1 `) alu_result [1] $end
$var wire 1 a) alu_result [0] $end
$var wire 1 b) br_true $end
$var wire 1 c) jump_en $end
$var wire 1 d) epc_taken $end
$var wire 1 e) epc [31] $end
$var wire 1 f) epc [30] $end
$var wire 1 g) epc [29] $end
$var wire 1 h) epc [28] $end
$var wire 1 i) epc [27] $end
$var wire 1 j) epc [26] $end
$var wire 1 k) epc [25] $end
$var wire 1 l) epc [24] $end
$var wire 1 m) epc [23] $end
$var wire 1 n) epc [22] $end
$var wire 1 o) epc [21] $end
$var wire 1 p) epc [20] $end
$var wire 1 q) epc [19] $end
$var wire 1 r) epc [18] $end
$var wire 1 s) epc [17] $end
$var wire 1 t) epc [16] $end
$var wire 1 u) epc [15] $end
$var wire 1 v) epc [14] $end
$var wire 1 w) epc [13] $end
$var wire 1 x) epc [12] $end
$var wire 1 y) epc [11] $end
$var wire 1 z) epc [10] $end
$var wire 1 {) epc [9] $end
$var wire 1 |) epc [8] $end
$var wire 1 }) epc [7] $end
$var wire 1 ~) epc [6] $end
$var wire 1 !* epc [5] $end
$var wire 1 "* epc [4] $end
$var wire 1 #* epc [3] $end
$var wire 1 $* epc [2] $end
$var wire 1 %* epc [1] $end
$var wire 1 &* epc [0] $end
$var reg 32 '* next_pc [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
b0 %
b11000000000001010001001011110011 &
b1110011 '
b0 (
bx )
bx *
b1 +
b1100000 ,
b1010 -
b0 .
b101 /
b0 0
b0 1
b0 2
b0 3
b0 4
b0 5
b0 6
b11111111111111111111110000000000 7
08
09
0:
0;
0<
1=
0>
0?
b11 @
0A
b100 B
xC
xD
0E
b0 F
b0 g
b11000000000001010001001011110011 *!
b1110011 K!
b1 L!
b1100000 M!
b1010 N!
b0 O!
b101 P!
b0 #"
b0 $"
b0 -#
b0 .#
02#
x3#
x4#
05#
b0 G#
0H#
0I#
0J#
0K#
0L#
b11 M#
0N#
0O#
1P#
0Q#
b0 5$
b0 w$
b0 ^%
b11111111111111111111110000000000 !&
bx ,&
b110000000000 -&
bx .&
bx t&
0Z'
b0 !)
b100 '*
b1100000000 %"
b1100000100 &"
b1100000101 '"
b1101000001 ("
b1101000010 )"
b1101000100 *"
1$
0#
0&*
0%*
0$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
00)
0/)
0.)
0-)
0,)
0+)
0*)
0))
0()
0')
0&)
0%)
0$)
0#)
0")
1~(
1}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
x\'
x['
1Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
1s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
1+&
0*&
0)&
1(&
1'&
0&&
0%&
1$&
1#&
1"&
1~%
1}%
0|%
0{%
1z%
1y%
1x%
1w%
0v%
1u%
0t%
0s%
1r%
0q%
0p%
0o%
1n%
0m%
1l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
1`%
1_%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
1g#
1f#
1e#
1d#
1c#
1b#
1a#
1`#
1_#
1^#
1]#
1\#
1[#
1Z#
1Y#
1X#
1W#
1V#
1U#
1T#
1S#
1R#
0F#
0E#
0D#
0C#
0B#
1A#
1@#
1?#
0>#
0=#
1<#
1;#
0:#
09#
18#
17#
16#
x1#
10#
0/#
0,#
0+#
1*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
1J"
1I"
0H"
0G"
1F"
1E"
1D"
1C"
0B"
1A"
0@"
0?"
1>"
0="
0<"
0;"
1:"
09"
18"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
1,"
1+"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
1`!
0_!
1^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
1U!
0T!
1S!
0R!
0Q!
1J!
1I!
0H!
0G!
1F!
1E!
1D!
1C!
0B!
1A!
0@!
0?!
1>!
0=!
0<!
0;!
1:!
09!
18!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
1,!
1+!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0f
0e
1d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
$end
#5
1!
1#
#10
0"
0!
0$
0#
#15
1!
1#
b100 g
15#
12#
1E
b100 %
1d)
1?)
1z(
1S$
1'!
bx *!
bx &
xJ!
xI!
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
bx M!
bx O!
bx N!
bx L!
bx P!
bx K!
bx '
bx /
bx +
bx -
bx .
bx ,
x`!
x_!
x^!
x]!
x\!
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xY'
xX'
xW'
xs&
xr&
xq&
x+&
x*&
x)&
x?#
x>#
x=#
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
bx -&
bx !&
bx #"
bx $"
b0 M#
0P#
b0 '*
b0 B
0=
b0 @
bx 2
bx 1
bx 7
00#
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
0*#
0d
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
0~(
0}(
bx w$
bx 5$
bx 3
bx 4
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
bx ^%
bx 0
xa)
x`)
x_)
x^)
x])
x\)
x[)
xZ)
xY)
xX)
xW)
xV)
xU)
xT)
xS)
xR)
xQ)
xP)
xO)
xN)
xM)
xL)
xK)
xJ)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
x|'
x{'
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
bx !)
bx 5
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
#20
0!
0#
#25
1!
1#
03#
04#
b0 g
b0 %
0?)
0z(
0S$
0'!
b11000000000001010001001011110011 *!
b11000000000001010001001011110011 &
1J!
1I!
0H!
0G!
1F!
1E!
1D!
1C!
0B!
1A!
0@!
0?!
1>!
0=!
0<!
0;!
1:!
09!
18!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
1,!
1+!
b1100000 M!
b0 O!
b1010 N!
b1 L!
b101 P!
b1110011 K!
b1110011 '
b101 /
b1 +
b1010 -
b0 .
b1100000 ,
1`!
0_!
1^!
0]!
0\!
0F#
0E#
0D#
0C#
0B#
1A#
1@#
0[!
0Z!
0Y!
0X!
0W!
0V!
1U!
0T!
1S!
0R!
1Y'
0X'
0W'
1s&
0r&
0q&
1+&
0*&
0)&
1?#
0>#
0=#
1(&
1'&
0&&
0%&
1$&
1#&
1"&
1<#
1;#
0:#
09#
18#
17#
16#
1~%
1}%
0|%
0{%
1z%
1y%
1x%
1w%
0v%
1u%
0t%
0s%
1r%
0q%
0p%
0o%
1n%
0m%
1l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
1`%
1_%
1J"
1I"
0H"
0G"
1F"
1E"
1D"
1C"
0B"
1A"
0@"
0?"
1>"
0="
0<"
0;"
1:"
09"
18"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
1,"
1+"
b110000000000 -&
b11111111111111111111110000000000 !&
xZ'
b0 #"
b0 $"
b11 M#
1P#
1=
b11 @
b0 2
b0 1
xA
b11111111111111111111110000000000 7
10#
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
xb)
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
1g#
1f#
1e#
1d#
1c#
1b#
1a#
1`#
1_#
1^#
1]#
1\#
1[#
1Z#
1Y#
1X#
1W#
1V#
1U#
1T#
1S#
1R#
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
1~(
1}(
b0 w$
b0 5$
b0 3
b0 4
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
b0 ^%
b0 !)
0Z'
0A
b0 5
b0 0
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
#30
0!
0#
#35
1!
1#
13#
#40
0!
0#
#45
1!
1#
#50
0!
0#
#55
1!
1#
#60
0!
0#
#65
1!
1#
#70
0!
0#
#75
1!
1#
#80
0!
0#
#85
1!
1#
#90
0!
0#
#95
1!
1#
#100
0!
0#
#105
1!
1#
#110
0!
0#
#115
1!
1#
#120
0!
0#
#125
1!
1#
#130
0!
0#
#135
1!
1#
#140
0!
0#
#145
1!
1#
#150
0!
0#
#155
1!
1#
#160
0!
0#
#165
1!
1#
#170
0!
0#
#175
1!
1#
#180
0!
0#
#185
1!
1#
#190
0!
0#
#195
1!
1#
#200
0!
0#
#205
1!
1#
#210
0!
0#
#215
1!
1#
#220
0!
0#
#225
1!
1#
#230
0!
0#
#235
1!
1#
#240
0!
0#
#245
1!
1#
#250
0!
0#
#255
1!
1#
#260
0!
0#
#265
1!
1#
#270
0!
0#
#275
1!
1#
#280
0!
0#
#285
1!
1#
#290
0!
0#
#295
1!
1#
#300
0!
0#
#305
1!
1#
#310
0!
0#
#315
1!
1#
#320
0!
0#
#325
1!
1#
#330
0!
0#
#335
1!
1#
#340
0!
0#
#345
1!
1#
#350
0!
0#
#355
1!
1#
#360
0!
0#
#365
1!
1#
#370
0!
0#
#375
1!
1#
#380
0!
0#
#385
1!
1#
#390
0!
0#
#395
1!
1#
#400
0!
0#
#405
1!
1#
#410
0!
0#
#415
1!
1#
#420
0!
0#
#425
1!
1#
#430
0!
0#
#435
1!
1#
#440
0!
0#
#445
1!
1#
#450
0!
0#
#455
1!
1#
#460
0!
0#
#465
1!
1#
#470
0!
0#
#475
1!
1#
#480
0!
0#
#485
1!
1#
#490
0!
0#
#495
1!
1#
#500
0!
0#
#505
1!
1#
#510
0!
0#
#515
1!
1#
#520
0!
0#
#525
1!
1#
#530
0!
0#
#535
1!
1#
#540
0!
0#
#545
1!
1#
#550
0!
0#
#555
1!
1#
#560
0!
0#
#565
1!
1#
#570
0!
0#
#575
1!
1#
#580
0!
0#
#585
1!
1#
#590
0!
0#
#595
1!
1#
#600
0!
0#
#605
1!
1#
#610
0!
0#
#615
1!
1#
#620
0!
0#
#625
1!
1#
#630
0!
0#
#635
1!
1#
#640
0!
0#
#645
1!
1#
#650
0!
0#
#655
1!
1#
#660
0!
0#
#665
1!
1#
#670
0!
0#
#675
1!
1#
#680
0!
0#
#685
1!
1#
#690
0!
0#
#695
1!
1#
#700
0!
0#
#705
1!
1#
#710
0!
0#
#715
1!
1#
#720
0!
0#
#725
1!
1#
#730
0!
0#
#735
1!
1#
#740
0!
0#
#745
1!
1#
#750
0!
0#
#755
1!
1#
#760
0!
0#
#765
1!
1#
#770
0!
0#
#775
1!
1#
#780
0!
0#
#785
1!
1#
#790
0!
0#
#795
1!
1#
#800
0!
0#
#805
1!
1#
#810
0!
0#
#815
1!
1#
#820
0!
0#
#825
1!
1#
#830
0!
0#
#835
1!
1#
#840
0!
0#
#845
1!
1#
#850
0!
0#
#855
1!
1#
#860
0!
0#
#865
1!
1#
#870
0!
0#
#875
1!
1#
#880
0!
0#
#885
1!
1#
#890
0!
0#
#895
1!
1#
#900
0!
0#
#905
1!
1#
#910
0!
0#
#915
1!
1#
#920
0!
0#
#925
1!
1#
#930
0!
0#
#935
1!
1#
#940
0!
0#
#945
1!
1#
#950
0!
0#
#955
1!
1#
#960
0!
0#
#965
1!
1#
#970
0!
0#
#975
1!
1#
#980
0!
0#
#985
1!
1#
#990
0!
0#
#995
1!
1#
#1000
0!
0#
#1005
1!
1#
#1010
0!
0#
#1015
1!
1#
#1020
0!
0#
#1025
1!
1#
#1030
0!
0#
#1035
1!
1#
#1040
0!
0#
#1045
1!
1#
#1050
0!
0#
#1055
1!
1#
#1060
0!
0#
#1065
1!
1#
#1070
0!
0#
#1075
1!
1#
#1080
0!
0#
#1085
1!
1#
#1090
0!
0#
#1095
1!
1#
#1100
0!
0#
#1105
1!
1#
#1110
0!
0#
#1115
1!
1#
#1120
0!
0#
#1125
1!
1#
#1130
0!
0#
#1135
1!
1#
#1140
0!
0#
#1145
1!
1#
#1150
0!
0#
#1155
1!
1#
#1160
0!
0#
#1165
1!
1#
#1170
0!
0#
#1175
1!
1#
#1180
0!
0#
#1185
1!
1#
#1190
0!
0#
#1195
1!
1#
#1200
0!
0#
#1205
1!
1#
#1210
0!
0#
#1215
1!
1#
#1220
0!
0#
#1225
1!
1#
#1230
0!
0#
#1235
1!
1#
#1240
0!
0#
#1245
1!
1#
#1250
0!
0#
#1255
1!
1#
#1260
0!
0#
#1265
1!
1#
#1270
0!
0#
#1275
1!
1#
#1280
0!
0#
#1285
1!
1#
#1290
0!
0#
#1295
1!
1#
#1300
0!
0#
#1305
1!
1#
#1310
0!
0#
#1315
1!
1#
#1320
0!
0#
#1325
1!
1#
#1330
0!
0#
#1335
1!
1#
#1340
0!
0#
#1345
1!
1#
#1350
0!
0#
#1355
1!
1#
#1360
0!
0#
#1365
1!
1#
#1370
0!
0#
#1375
1!
1#
#1380
0!
0#
#1385
1!
1#
#1390
0!
0#
#1395
1!
1#
#1400
0!
0#
#1405
1!
1#
#1410
0!
0#
#1415
1!
1#
#1420
0!
0#
#1425
1!
1#
#1430
0!
0#
#1435
1!
1#
#1440
0!
0#
#1445
1!
1#
#1450
0!
0#
#1455
1!
1#
#1460
0!
0#
#1465
1!
1#
#1470
0!
0#
#1475
1!
1#
#1480
0!
0#
#1485
1!
1#
#1490
0!
0#
#1495
1!
1#
#1500
0!
0#
#1505
1!
1#
#1510
0!
0#
#1515
1!
1#
#1520
0!
0#
#1525
1!
1#
#1530
0!
0#
#1535
1!
1#
#1540
0!
0#
#1545
1!
1#
#1550
0!
0#
#1555
1!
1#
#1560
0!
0#
#1565
1!
1#
#1570
0!
0#
#1575
1!
1#
#1580
0!
0#
#1585
1!
1#
#1590
0!
0#
#1595
1!
1#
#1600
0!
0#
#1605
1!
1#
#1610
0!
0#
#1615
1!
1#
#1620
0!
0#
#1625
1!
1#
#1630
0!
0#
#1635
1!
1#
#1640
0!
0#
#1645
1!
1#
#1650
0!
0#
#1655
1!
1#
#1660
0!
0#
#1665
1!
1#
#1670
0!
0#
#1675
1!
1#
#1680
0!
0#
#1685
1!
1#
#1690
0!
0#
#1695
1!
1#
#1700
0!
0#
#1705
1!
1#
#1710
0!
0#
#1715
1!
1#
#1720
0!
0#
#1725
1!
1#
#1730
0!
0#
#1735
1!
1#
#1740
0!
0#
#1745
1!
1#
#1750
0!
0#
#1755
1!
1#
#1760
0!
0#
#1765
1!
1#
#1770
0!
0#
#1775
1!
1#
#1780
0!
0#
#1785
1!
1#
#1790
0!
0#
#1795
1!
1#
#1800
0!
0#
#1805
1!
1#
#1810
0!
0#
#1815
1!
1#
#1820
0!
0#
#1825
1!
1#
#1830
0!
0#
#1835
1!
1#
#1840
0!
0#
#1845
1!
1#
#1850
0!
0#
#1855
1!
1#
#1860
0!
0#
#1865
1!
1#
#1870
0!
0#
#1875
1!
1#
#1880
0!
0#
#1885
1!
1#
#1890
0!
0#
#1895
1!
1#
#1900
0!
0#
#1905
1!
1#
#1910
0!
0#
#1915
1!
1#
#1920
0!
0#
#1925
1!
1#
#1930
0!
0#
#1935
1!
1#
#1940
0!
0#
#1945
1!
1#
#1950
0!
0#
#1955
1!
1#
#1960
0!
0#
#1965
1!
1#
#1970
0!
0#
#1975
1!
1#
#1980
0!
0#
#1985
1!
1#
#1990
0!
0#
#1995
1!
1#
#2000
0!
0#
#2005
1!
1#
#2010
0!
0#
#2015
1!
1#
#2020
0!
0#
#2025
1!
1#
#2030
0!
0#
#2035
1!
1#
#2040
0!
0#
#2045
1!
1#
#2050
0!
0#
#2055
1!
1#
#2060
0!
0#
#2065
1!
1#
#2070
0!
0#
#2075
1!
1#
#2080
0!
0#
#2085
1!
1#
#2090
0!
0#
#2095
1!
1#
#2100
0!
0#
#2105
1!
1#
#2110
0!
0#
#2115
1!
1#
#2120
0!
0#
#2125
1!
1#
#2130
0!
0#
#2135
1!
1#
#2140
0!
0#
#2145
1!
1#
#2150
0!
0#
#2155
1!
1#
#2160
0!
0#
#2165
1!
1#
#2170
0!
0#
#2175
1!
1#
#2180
0!
0#
#2185
1!
1#
#2190
0!
0#
#2195
1!
1#
#2200
0!
0#
#2205
1!
1#
#2210
0!
0#
#2215
1!
1#
#2220
0!
0#
#2225
1!
1#
#2230
0!
0#
#2235
1!
1#
#2240
0!
0#
#2245
1!
1#
#2250
0!
0#
#2255
1!
1#
#2260
0!
0#
#2265
1!
1#
#2270
0!
0#
#2275
1!
1#
#2280
0!
0#
#2285
1!
1#
#2290
0!
0#
#2295
1!
1#
#2300
0!
0#
#2305
1!
1#
#2310
0!
0#
#2315
1!
1#
#2320
0!
0#
#2325
1!
1#
#2330
0!
0#
#2335
1!
1#
#2340
0!
0#
#2345
1!
1#
#2350
0!
0#
#2355
1!
1#
#2360
0!
0#
#2365
1!
1#
#2370
0!
0#
#2375
1!
1#
#2380
0!
0#
#2385
1!
1#
#2390
0!
0#
#2395
1!
1#
#2400
0!
0#
#2405
1!
1#
#2410
0!
0#
#2415
1!
1#
#2420
0!
0#
#2425
1!
1#
#2430
0!
0#
#2435
1!
1#
#2440
0!
0#
#2445
1!
1#
#2450
0!
0#
#2455
1!
1#
#2460
0!
0#
#2465
1!
1#
#2470
0!
0#
#2475
1!
1#
#2480
0!
0#
#2485
1!
1#
#2490
0!
0#
#2495
1!
1#
#2500
0!
0#
#2505
1!
1#
#2510
0!
0#
#2515
1!
1#
#2520
0!
0#
#2525
1!
1#
#2530
0!
0#
#2535
1!
1#
#2540
0!
0#
#2545
1!
1#
#2550
0!
0#
#2555
1!
1#
#2560
0!
0#
#2565
1!
1#
#2570
0!
0#
#2575
1!
1#
#2580
0!
0#
#2585
1!
1#
#2590
0!
0#
#2595
1!
1#
#2600
0!
0#
#2605
1!
1#
#2610
0!
0#
#2615
1!
1#
#2620
0!
0#
#2625
1!
1#
#2630
0!
0#
#2635
1!
1#
#2640
0!
0#
#2645
1!
1#
#2650
0!
0#
#2655
1!
1#
#2660
0!
0#
#2665
1!
1#
#2670
0!
0#
#2675
1!
1#
#2680
0!
0#
#2685
1!
1#
#2690
0!
0#
#2695
1!
1#
#2700
0!
0#
#2705
1!
1#
#2710
0!
0#
#2715
1!
1#
#2720
0!
0#
#2725
1!
1#
#2730
0!
0#
#2735
1!
1#
#2740
0!
0#
#2745
1!
1#
#2750
0!
0#
#2755
1!
1#
#2760
0!
0#
#2765
1!
1#
#2770
0!
0#
#2775
1!
1#
#2780
0!
0#
#2785
1!
1#
#2790
0!
0#
#2795
1!
1#
#2800
0!
0#
#2805
1!
1#
#2810
0!
0#
#2815
1!
1#
#2820
0!
0#
#2825
1!
1#
#2830
0!
0#
#2835
1!
1#
#2840
0!
0#
#2845
1!
1#
#2850
0!
0#
#2855
1!
1#
#2860
0!
0#
#2865
1!
1#
#2870
0!
0#
#2875
1!
1#
#2880
0!
0#
#2885
1!
1#
#2890
0!
0#
#2895
1!
1#
#2900
0!
0#
#2905
1!
1#
#2910
0!
0#
#2915
1!
1#
#2920
0!
0#
#2925
1!
1#
#2930
0!
0#
#2935
1!
1#
#2940
0!
0#
#2945
1!
1#
#2950
0!
0#
#2955
1!
1#
#2960
0!
0#
#2965
1!
1#
#2970
0!
0#
#2975
1!
1#
#2980
0!
0#
#2985
1!
1#
#2990
0!
0#
#2995
1!
1#
#3000
0!
0#
#3005
1!
1#
